rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 🔐 Users - Each user can read all and write only their own document
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // 🔐 Chats - Allow authenticated users if they exist in users collection
    match /chats/{chatId} {
      allow read, write: if request.auth != null &&
                         exists(/databases/$(database)/documents/users/$(request.auth.uid));

      // Subcollection: messages - relaxed for debugging
      match /messages/{messageId} {
        allow read, write: if true; // Temporarily allow all reads and writes to debug
      }
    }

    // 🔐 Bookings - Student creates, teacher updates, both can read
    match /bookings/{bookingId} {
      allow read: if request.auth != null &&
                  exists(/databases/$(database)/documents/users/$(request.auth.uid));
      allow create: if request.auth != null &&
                    request.resource.data.studentId == request.auth.uid &&
                    exists(/databases/$(database)/documents/users/$(request.auth.uid));
      allow update: if request.auth != null &&
                    resource.data.teacherId == request.auth.uid;
    }

    // 🔐 Ratings - Public read, only student who owns the rating can write
    match /ratings/{ratingId} {
      allow read: if true;
      allow write: if request.auth != null &&
                   request.resource.data.studentId == request.auth.uid;
    }
  }
}